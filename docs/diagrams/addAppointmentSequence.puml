@startuml
hide footbox

actor User

participant ":ClinicEase" as ClinicEase
participant ":Parser" as Parser
participant ":Appointment" as Appointment
participant ":AddAppointmentCommand" as AddAppointmentCommand
participant ":ManagementSystem" as ManagementSystem
participant ":Storage" as Storage

User -> ClinicEase : enter input
activate ClinicEase
ClinicEase -> Parser : parse(input)
activate Parser

Parser -> Parser : parseAddAppointment(userInput)
activate Parser

Parser -> Parser : extractValue(userInput)
activate Parser
note right of Parser:  extractValue is called separately \n (not in a loop) to parse input and extract each parameter \n: NRIC, date, time, and description
Parser --> Parser : :String
deactivate Parser

create Appointment
Parser -> Appointment : new Appointment()
activate Appointment
Appointment --> Parser : appt :Appointment
deactivate Appointment

Parser --> Parser : appt :Appointment
deactivate Parser



create AddAppointmentCommand
Parser -> AddAppointmentCommand : new AddAppointmentCommand(appt)
activate AddAppointmentCommand
AddAppointmentCommand --> Parser : :AddAppointmentCommand
deactivate AddAppointmentCommand
Parser --> ClinicEase : :AddAppointmentCommand
deactivate Parser

ClinicEase -> AddAppointmentCommand : execute()
activate AddAppointmentCommand
AddAppointmentCommand -> ManagementSystem : addAppointment(appointment)
activate ManagementSystem

ManagementSystem -> ManagementSystem : findPatientByNRIC()
activate ManagementSystem
ManagementSystem -> Appointment : getNric()
activate Appointment
Appointment --> ManagementSystem : nric :String
deactivate Appointment
ManagementSystem --> ManagementSystem : nric :String
deactivate ManagementSystem

ManagementSystem -> Storage : saveAppointments()
activate Storage
Storage --> ManagementSystem :
deactivate Storage
ManagementSystem --> AddAppointmentCommand :
deactivate ManagementSystem
AddAppointmentCommand --> ClinicEase :
deactivate AddAppointmentCommand
ClinicEase --> User : display message
deactivate ClinicEase

@enduml